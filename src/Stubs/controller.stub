<?php

namespace App\Http\Controllers;

use App\Exceptions\Response;
use App\Models\{{modelName}};
use App\Http\Requests\{{modelName}}Request;

class {{modelName}}Controller extends Controller
{
    public function index()
    {
        Response::success({{modelName}}::all());
    }

    public function store({{modelName}}Request $request)
    {
        $data = $request->validate($request->rules());
        ${{modelVariable}} = {{modelName}}::create($data);

        Response::success(201, ${{modelVariable}}, "Created Successfully..!");
    }

    public function show({{modelName}} ${{modelVariable}})
    {
        Response::success(${{modelVariable}});
    }

    public function update({{modelName}}Request $request, ${{modelVariable}}_id)
    {
        $data = $request->validate($request->rules());
        ${{modelVariable}} = {{modelName}}::find(${{modelVariable}}_id);
        ${{modelVariable}}->update($data);

        Response::success(${{modelVariable}}, "Updated Successfully");
    }

    public function destroy({{modelName}} ${{modelVariable}})
    {
        ${{modelVariable}}->delete();

        Response::success(204, null ,"'Id' . ${{modelVariable}} . 'Is Deleted Successfully'");
    }

    public function delete({{modelName}} ${{modelVariable}}, $id)
    {
        ${{modelVariable}} = ${{modelVariable}}::find($id);

        if (!${{modelVariable}}) {
            return Response::error(404, "${{modelVariable}} . 'not found ..!'");
        }

        ${{modelVariable}}->deleted = ($request->deleted ?? "1");
        ${{modelVariable}}->delstamp = now();
        $message = "${{modelVariable}} . 'deleted successfully.'";

        ${{modelVariable}}->save();

        Response::success($message);
    }
}
